"""init schema

Revision ID: d07a5ed359a8
Revises: 
Create Date: 2025-09-11 21:12:40.948850

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd07a5ed359a8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('cn_purchase_items', schema=None) as batch_op:
        batch_op.alter_column('comment',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.drop_index('ix_cn_purchase_items_purchase')

    with op.batch_alter_table('cn_purchases', schema=None) as batch_op:
        batch_op.alter_column('comment',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.drop_index('ix_cn_purchases_status_created')

    with op.batch_alter_table('msk_inbound_docs', schema=None) as batch_op:
        batch_op.alter_column('comment',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.drop_index('ix_msk_inbound_status_created')
        batch_op.drop_constraint('msk_inbound_docs_target_warehouse_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('msk_inbound_docs_warehouse_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'warehouses', ['target_warehouse_id'], ['id'])
        batch_op.drop_column('warehouse_id')

    with op.batch_alter_table('msk_inbound_items', schema=None) as batch_op:
        batch_op.drop_index('ix_msk_inbound_items_doc')

    with op.batch_alter_table('pack_doc_items', schema=None) as batch_op:
        batch_op.drop_index('ix_pack_doc_items_doc')
        batch_op.drop_constraint('pack_doc_items_doc_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'pack_docs', ['doc_id'], ['id'])

    with op.batch_alter_table('pack_docs', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
        batch_op.alter_column('status',
               existing_type=postgresql.ENUM('draft', 'posted', name='packdocstatus'),
               type_=sa.Enum('draft', 'posted', name='pack_doc_status_enum'),
               existing_nullable=False,
               existing_server_default=sa.text("'draft'::packdocstatus"))
        batch_op.drop_index('ix_pack_docs_created')
        batch_op.drop_index('ux_pack_docs_wh_number')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('pack_docs', schema=None) as batch_op:
        batch_op.create_index('ux_pack_docs_wh_number', ['warehouse_id', 'number'], unique=True)
        batch_op.create_index('ix_pack_docs_created', ['created_at'], unique=False)
        batch_op.alter_column('status',
               existing_type=sa.Enum('draft', 'posted', name='pack_doc_status_enum'),
               type_=postgresql.ENUM('draft', 'posted', name='packdocstatus'),
               existing_nullable=False,
               existing_server_default=sa.text("'draft'::packdocstatus"))
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))

    with op.batch_alter_table('pack_doc_items', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('pack_doc_items_doc_id_fkey', 'pack_docs', ['doc_id'], ['id'], ondelete='CASCADE')
        batch_op.create_index('ix_pack_doc_items_doc', ['doc_id'], unique=False)

    with op.batch_alter_table('msk_inbound_items', schema=None) as batch_op:
        batch_op.create_index('ix_msk_inbound_items_doc', ['msk_inbound_id'], unique=False)

    with op.batch_alter_table('msk_inbound_docs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('warehouse_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('msk_inbound_docs_warehouse_id_fkey', 'warehouses', ['warehouse_id'], ['id'])
        batch_op.create_foreign_key('msk_inbound_docs_target_warehouse_id_fkey', 'warehouses', ['target_warehouse_id'], ['id'], onupdate='CASCADE', ondelete='SET NULL')
        batch_op.create_index('ix_msk_inbound_status_created', ['status', sa.text('created_at DESC')], unique=False)
        batch_op.alter_column('comment',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)

    with op.batch_alter_table('cn_purchases', schema=None) as batch_op:
        batch_op.create_index('ix_cn_purchases_status_created', ['status', sa.text('created_at DESC')], unique=False)
        batch_op.alter_column('comment',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)

    with op.batch_alter_table('cn_purchase_items', schema=None) as batch_op:
        batch_op.create_index('ix_cn_purchase_items_purchase', ['cn_purchase_id'], unique=False)
        batch_op.alter_column('comment',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)

    # ### end Alembic commands ###
